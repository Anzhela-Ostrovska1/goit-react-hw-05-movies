{"version":3,"file":"static/js/939.44f573a5.chunk.js","mappings":"kNAYA,IAGA,EAHkB,CAChBA,OAbF,SAAgBC,GACd,OAAOC,MAAM,sCAADC,OAC4BF,EAAO,4EAC7CG,MAAK,SAAAC,GACL,OAAIA,EAAKC,GACAD,EAAKE,OAGPC,QAAQC,OAAO,IAAIC,MAAM,uBAClC,GACF,G,kBC8BA,EAnCgB,WACd,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBZ,GAAYgB,EAAAA,EAAAA,MAAZhB,QACRiB,GAA0BN,EAAAA,EAAAA,UAAS,MAAKO,GAAAL,EAAAA,EAAAA,GAAAI,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAatB,OAXAG,EAAAA,EAAAA,YAAU,WACHrB,GACLsB,EAAAA,OAAiBtB,GACdG,MAAK,SAAAC,GACJW,EAAWX,EACb,IACCmB,OAAM,SAAAJ,GACLC,EAASD,EACX,GACJ,GAAG,CAACnB,KAGFwB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGN,IAASO,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,EAAMQ,UACpBb,GAAWA,EAAQc,SAAWd,EAAQc,QAAQC,OAAS,EACtDf,EAAQc,QAAQE,KAAI,SAAA/B,GAAM,OACxByB,EAAAA,EAAAA,MAAA,OAAKO,UAAWC,EAAAA,EAAAA,iBAAqBP,SAAA,EACnCD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMK,UAAWC,EAAAA,EAAAA,cAAkBP,SAAC,YAAc,IAAE1B,EAAOkC,WAE7DP,EAAAA,EAAAA,KAAA,KAAAD,SAAI1B,EAAOmC,YAJ8BnC,EAAOoC,GAK5C,KAGRT,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gDAIX,C","sources":["services/Api-Reviews.js","components/Reviews .js"],"sourcesContent":["function review(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1&api_key=f71c5261a9fba20ceeb62f41ed4cce9c`\n  ).then(resp => {\n    if (resp.ok) {\n      return resp.json();\n    }\n\n    return Promise.reject(new Error('There are no movies'));\n  });\n}\n\nconst apiReview = {\n  review,\n};\nexport default apiReview;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ApiReview from '../services/Api-Reviews';\nimport css from '../components/MoviesGallery.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    ApiReview.review(movieId)\n      .then(resp => {\n        setReviews(resp);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <h1>{error.message}</h1>}\n      {reviews && reviews.results && reviews.results.length > 0 ? (\n        reviews.results.map(review => (\n          <div className={css.ReviewsContainer} key={review.id}>\n            <p>\n              <span className={css.ReviewsAuthor}>Author:</span> {review.author}\n            </p>\n            <p>{review.content}</p>\n          </div>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["review","movieId","fetch","concat","then","resp","ok","json","Promise","reject","Error","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useParams","_useState3","_useState4","error","setError","useEffect","ApiReview","catch","_jsxs","children","_jsx","message","results","length","map","className","css","author","content","id"],"sourceRoot":""}