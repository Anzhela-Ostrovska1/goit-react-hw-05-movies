{"version":3,"file":"static/js/858.cc8f63c3.chunk.js","mappings":"6KAsBA,IAlBkB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,aAAiBC,SAC7BN,EAAOO,KAAI,SAAAC,GAAK,OACfL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAEHC,GAAE,WAAAC,OAAaH,EAAMI,IACrBR,UAAWC,EAAAA,EAAAA,cACXQ,MAAO,CAAEC,KAAMb,GAAWK,UAE1BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,UAAcC,SAAEE,EAAMO,kBALhCP,EAAMI,GAMN,KAIf,C,yFCRA,IAGA,EAHkB,CAChBZ,OAbF,SAAgBgB,GACd,OAAOC,MAAM,mDAADN,OACyCK,EAAI,wFACvDE,MAAK,SAAAC,GACL,OAAIA,EAAKC,GACAD,EAAKE,OAGPC,QAAQC,OAAO,IAAIC,MAAM,uBAClC,GACF,G,mCCiDA,EArDe,WACb,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjC/B,EAAMgC,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAR,EAAAA,EAAAA,GAAAM,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAsCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,IAElCG,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACRC,EAAiC,QAA5BD,EAAGP,EAAaS,IAAI,gBAAQ,IAAAF,EAAAA,EAAI,GACvCC,GACFE,EAAAA,OAAiBF,GACd3B,MAAK,SAAAnB,GAAkB,IAAfiD,EAAOjD,EAAPiD,QACPf,EAAUe,EACZ,IACCC,OAAM,SAAApB,GACLC,EAASD,EACX,GAEN,GAAG,CAACQ,IAeJ,OACEa,EAAAA,EAAAA,MAAA,OAAK9C,UAAWC,EAAAA,EAAAA,UAAcC,SAAA,CAC3BuB,IAAS1B,EAAAA,EAAAA,KAAA,MAAAG,SAAKuB,EAAMsB,WACrBD,EAAAA,EAAAA,MAAA,QAAME,SAZW,SAAAC,GACnBA,EAAMC,iBACFb,EACFH,EAAgB,CAAEO,MAAOJ,IAEzBR,EAAU,GAEd,EAKiC3B,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,SACEoD,YAAY,wBACZnD,UAAWC,EAAAA,EAAAA,MACXmD,KAAK,OACLC,MAAOhB,EACPiB,SAtBkB,SAAAL,GACxBX,EAAeW,EAAMM,OAAOF,MAC9B,KAsBMtD,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,EAAAA,OAAYmD,KAAK,SAAQlD,SAAC,eAK/CH,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAAC5D,OAAQA,MAG1B,C","sources":["components/MoviesList.js","services/Api-Movies.js","pages/Movies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport css from '../components/MoviesGallery.module.css';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.MovieGallery}>\n      {movies.map(movie => (\n        <Link\n          key={movie.id}\n          to={`/movies/${movie.id}`}\n          className={css.MovieItemLink}\n          state={{ from: location }}\n        >\n          <li className={css.MovieItem}>{movie.original_title}</li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","function movies(name) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${name}&include_adult=false&language=en-US&page=1&api_key=f71c5261a9fba20ceeb62f41ed4cce9c`\n  ).then(resp => {\n    if (resp.ok) {\n      return resp.json();\n    }\n\n    return Promise.reject(new Error('There are no movies'));\n  });\n}\n\nconst apiMovies = {\n  movies,\n};\nexport default apiMovies;\n","import { useEffect, useState } from 'react';\nimport ApiMovies from '../services/Api-Movies';\nimport { useSearchParams } from 'react-router-dom';\nimport css from '../components/MoviesGallery.module.css';\nimport MoviesList from '../components/MoviesList';\n\nconst Movies = () => {\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (query) {\n      ApiMovies.movies(query)\n        .then(({ results }) => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n  }, [searchParams]);\n\n  const handleInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchQuery) {\n      setSearchParams({ query: searchQuery });\n    } else {\n      setMovies([]);\n    }\n  };\n\n  return (\n    <div className={css.Container}>\n      {error && <h1>{error.message}</h1>}\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Enter the movie title\"\n          className={css.Input}\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleInputChange}\n        />\n        <button className={css.Button} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","movies","location","useLocation","_jsx","className","css","children","map","movie","Link","to","concat","id","state","from","original_title","name","fetch","then","resp","ok","json","Promise","reject","Error","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState5","_useState6","searchQuery","setSearchQuery","useEffect","_searchParams$get","query","get","ApiMovies","results","catch","_jsxs","message","onSubmit","event","preventDefault","placeholder","type","value","onChange","target","MoviesList"],"sourceRoot":""}